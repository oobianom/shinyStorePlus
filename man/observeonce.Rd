% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/persistentObserveEvent.R
\name{observeOnce}
\alias{observeOnce}
\alias{observeOnceRestart}
\title{Observe event execution ONCE across multiple sessions}
\usage{
observeOnce(
  expression,
  session = getDefaultReactiveDomain(),
  input,
  output,
  priority = 1
)

observeOnceRestart(session = getDefaultReactiveDomain())
}
\arguments{
\item{session}{the shiny server session object passed to function. Default is getDefaultReactiveDomain()}

\item{input}{the shiny server input}

\item{output}{the shiny server output}

\item{priority}{An integer or numeric that controls the priority with which this observer should be executed. A higher value means higher priority: an observer with a higher priority value will execute before all observers with lower priority values. Positive, negative, and zero values are allowed.}
}
\description{
Observe event that only gets executed one across multiple shiny sessions
}
\details{
The current set of functions enables users to execute an expression in the 'Shiny' app ONCE across multiple sessions, ensuring that certain actions or elements only appear the first time a user interacts with the app. For example, it could be used to display a welcome modal or a cookie acceptance prompt only during the user's first session. After the initial interaction, these elements will not appear again, even if the user refreshes the app or closes and reopens it later. This functionality helps streamline the user experience by preventing repetitive prompts and maintaining a clean interface for returning users.
}
\examples{
\donttest{
library(shiny)
library(shinyStorePlus)

if (interactive()) {

shiny::shinyApp(ui = ui, server = server)
}

}

}
