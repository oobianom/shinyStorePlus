% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/includes.R
\name{initStore}
\alias{initStore}
\title{Included package scripts}
\usage{
initStore(src = c("browser", "rpkg", "all"), rpkg.api.key)
}
\arguments{
\item{src}{scripts to include}

\item{rpkg.api.key}{API key obtained from rpkg.net to use if src = "rpkg" or "all"}
}
\value{
Initialize the storage by including scripts necessary for the persistent storage handling
}
\description{
To unlock the "rpkg" or "all" functionality, you'll need to obtain a FREE API key from https://api.rpkg.net \CR
However, before requesting your API key, it's recommended to do an initial deployment of your app.
This is because the API key generation process requires you to provide the link to your Shiny app.
}
\details{
Include Dexie and the package script in the header
}
\note{
Choices for "src":\cr\cr
"browser" - include only scripts relevant for storing data within browser\cr\cr
"rpkg" - include scripts relevant for storing app views, likes and followers in rpkg.net\cr\cr
"all" - include all scripts\cr
}
\examples{
\donttest{
library(shiny)
library(shinyStorePlus)

if (interactive()) {
  ui <- shiny::fluidPage(
    # initialize stores
    initStore(),
    titlePanel("Sample
             shinyStorePlus Init Inputs"),
    sidebarLayout(
      sidebarPanel(
        sliderInput("nextgenshinyapps1",
          "Number of bins:",
          min = 1,
          max = 200,
          value = 150
        ),
        textInput(
          "caption",
          "simple caption:",
          "summary, try editing"
        ),
        numericInput("obs",
          "sample observations:",
          10,
          min = 1, max = 100
        )
      ),
      mainPanel(
        plotOutput("distPlot")
      )
    )
  )
  server <- function(input, output, session) {
    output$distPlot <- renderPlot({
      x <- faithful[, 2]
      bins <- seq(min(x),
        max(x),
        length.out =
          input$nextgenshinyapps1 + 1
      )
      hist(x,
        breaks = bins,
        col = "blue",
        border = "gray"
      )
    })
  }
  shiny::shinyApp(ui = ui, server = server)
}
}

}
